name: Python CI

on:
  push:
    branches:
      - main
      - development
      - workflow-development

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x' # Use the latest Python 3 version

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-test.txt

    - name: Install ffmpeg on Ubuntu
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg

    - name: Check script syntax
      run: |
        python -m py_compile vidcompress.py

    - name: Run unit tests
      env:
        PYTHONPATH: ${{ github.workspace }}
      run: |
        pytest tests/test_unit.py -v --cov=vidcompress --cov-report=xml

    - name: Run integration tests
      env:
        PYTHONPATH: ${{ github.workspace }}
      run: |
        pytest tests/test_integration.py -v

    - name: Upload coverage report
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true

  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x' # Use the latest Python 3 version

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-test.txt

    - name: Install ffmpeg on Windows
      run: |
        choco install ffmpeg -y

    - name: Check script syntax
      run: |
        python -m py_compile vidcompress.py

    - name: Run unit tests
      env:
        PYTHONPATH: ${{ github.workspace }}
      run: |
        pytest tests/test_unit.py -v --cov=vidcompress --cov-report=xml

    - name: Run integration tests
      env:
        PYTHONPATH: ${{ github.workspace }}
      run: |
        pytest tests/test_integration.py -v

    - name: Upload coverage report
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true